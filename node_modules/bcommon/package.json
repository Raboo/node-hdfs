{
  "name": "bcommon",
  "version": "0.0.5",
  "description": "common module for baciro",
  "main": "common.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "git@cassandra01.solusi247.com:septian/bcommon.git"
  },
  "keywords": [
    "baciro",
    "common"
  ],
  "author": {
    "name": "Septian Wibisono"
  },
  "license": "MIT",
  "dependencies": {
    "bash-color": "0.0.3",
    "date-format-lite": "^0.7.4"
  },
  "readme": "## Functions\n\n<dl>\n<dt><a href=\"#chmod\">chmod(file, mode, message)</a></dt>\n<dd><p>Fungsi chmod\nFungsi ini bertindak sebagai penyederhana fungsi fs.chmod</p>\n</dd>\n<dt><a href=\"#genrandkey\">genrandkey(length)</a> ⇒ <code>string</code></dt>\n<dd><p>Fungsi generate random string</p>\n<p>Fungsi ini akan generate string acak, secara default\nfungsi ini akan membuat string sepanjang 48 byte.</p>\n</dd>\n<dt><a href=\"#showStatus\">showStatus(code, message)</a> ⇒ <code>object</code></dt>\n<dd><p>showStatus</p>\n<p>show status of transaction</p>\n</dd>\n<dt><a href=\"#isEmptyObject\">isEmptyObject(obj)</a> ⇒ <code>Boolean</code></dt>\n<dd><p>Fungsi ini akan menguji object, apakah object tersebut kosong atau tidak.</p>\n</dd>\n<dt><a href=\"#uniq\">uniq(a)</a> ⇒ <code>Object</code></dt>\n<dd><p>Find unique content of object</p>\n</dd>\n<dt><a href=\"#namespace\">namespace(name, separator, container, val)</a> ⇒ <code>Object</code></dt>\n<dd><p>Change string to namespace</p>\n</dd>\n<dt><a href=\"#isjson\">isjson(obj)</a> ⇒ <code>Boolean</code></dt>\n<dd><p>Function to check if input object is json or not</p>\n</dd>\n<dt><a href=\"#showLog\">showLog(String, String)</a> ⇒</dt>\n<dd><p>Show log to console depend on config level.</p>\n</dd>\n</dl>\n\n<a name=\"chmod\"></a>\n\n## chmod(file, mode, message)\nFungsi chmod\nFungsi ini bertindak sebagai penyederhana fungsi fs.chmod\n\n**Kind**: global function  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| file | <code>string</code> | file yang akan dirubah modenya |\n| mode | <code>octal</code> | mode perubahan |\n| message | <code>string</code> | pesan yang akan tampil ketika berhasil |\n\n<a name=\"genrandkey\"></a>\n\n## genrandkey(length) ⇒ <code>string</code>\nFungsi generate random string\n\nFungsi ini akan generate string acak, secara default\nfungsi ini akan membuat string sepanjang 48 byte.\n\n**Kind**: global function  \n**Returns**: <code>string</code> - random string in specified length  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| length | <code>integer</code> | integer length of string in byte |\n\n<a name=\"showStatus\"></a>\n\n## showStatus(code, message) ⇒ <code>object</code>\nshowStatus\n\nshow status of transaction\n\n**Kind**: global function  \n**Returns**: <code>object</code> - object  json object of status  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| code | <code>integer</code> | kode status |\n| message | <code>string</code> | Pesan yang akan ditampilkan ke status |\n\n<a name=\"isEmptyObject\"></a>\n\n## isEmptyObject(obj) ⇒ <code>Boolean</code>\nFungsi ini akan menguji object, apakah object tersebut kosong atau tidak.\n\n**Kind**: global function  \n**Returns**: <code>Boolean</code> - Nilai balik berupa boolean, true bila kosong, atau false bila tidak.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| obj | <code>Object</code> | Object yang akan diuji |\n\n<a name=\"uniq\"></a>\n\n## uniq(a) ⇒ <code>Object</code>\nFind unique content of object\n\n**Kind**: global function  \n**Returns**: <code>Object</code> - Unique result object  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| a | <code>Object</code> | Asserted object |\n\n<a name=\"namespace\"></a>\n\n## namespace(name, separator, container, val) ⇒ <code>Object</code>\nChange string to namespace\n\n**Kind**: global function  \n**Returns**: <code>Object</code> - Nested object result  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| name | <code>String</code> | Separated string |\n| separator | <code>String</code> | Separator of string |\n| container | <code>Object</code> | Target object |\n| val | <code>Mixed</code> | Content of target object |\n\n<a name=\"isjson\"></a>\n\n## isjson(obj) ⇒ <code>Boolean</code>\nFunction to check if input object is json or not\n\n**Kind**: global function  \n**Returns**: <code>Boolean</code> - Return True if input is json, or False otherwise.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| obj | <code>string</code> | String object to check. |\n\n<a name=\"showLog\"></a>\n\n## showLog(String, String) ⇒\nShow log to console depend on config level.\n\n**Kind**: global function  \n**Returns**: String        String shown to console.  \n\n| Param | Description |\n| --- | --- |\n| String | type Type of log, it can be info, error, or debug. |\n| String | msg  Message that want to shown on console. |\n\n",
  "readmeFilename": "readme.md",
  "gitHead": "796b81f4e1bd69680ded3bbe32dfcdbe5fa1a6ab",
  "_id": "bcommon@0.0.5",
  "_shasum": "8a6e7ac88429bb4def90b1672bac9f819aca5c38",
  "_from": "bcommon@0.0.5"
}
